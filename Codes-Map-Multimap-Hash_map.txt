#include<map>
#include<string>
#include<fstream>
#include<iostream>
#include<hash_map>
using namespace std;

int main()
{
	// Hashing Example

	{

	hash_map<int, string> Mint_string;
	ifstream rdr("input.txt");

	int Size;
	rdr >> Size;

	for (int i = 0; i < Size; i++)
	{
		int V;
		string str;
		rdr >> V >> str;

		Mint_string[V] = str;

	}

	for (hash_map<int, string>::iterator i = Mint_string.begin(); i != Mint_string.end(); i++)
	{
		cout << i->first << "," << i->second << endl;
	}

	system("pause");
	}
	// Multimap Example

	{
	multimap<int, string> Mint_string;
	ifstream rdr("input.txt");

	int Size;
	rdr >> Size;

	for (int i = 0; i < Size; i++)
	{
		int V;
		string str;
		rdr >> V >> str;

		Mint_string.insert(std::pair<int, string>(V, str));

	}

	for (multimap<int, string>::iterator i = Mint_string.begin(); i != Mint_string.end(); i++)
	{
		cout << i->first << "," << i->second << endl;
	}

	system("pause");

	}

	// Map of string as key and int as value
	{
	map<string, int> Mstring_int;
	ifstream rdr("input.txt");

	int Size;
	rdr >> Size;

	for (int i = 0; i < Size; i++)
	{
		int V;
		string str;
		rdr >> V >> str;

		Mstring_int[str] = V;

	}

	for (map<string, int>::iterator i = Mstring_int.begin(); i != Mstring_int.end(); i++)
	{
		cout << i->first << "," << i->second << endl;
	}

	system("pause");
	
	}

	// map of int as key and string as value

	{

	map<int, string> Mint_string;
	ifstream rdr("input.txt");

	int Size;
	rdr >> Size;

	for (int i = 0; i < Size; i++)
	{
		int V;
		string str;
		rdr >> V >> str;

		Mint_string[V] = str;

	}

	for (map<int, string>::iterator i = Mint_string.begin(); i != Mint_string.end(); i++)
	{
		cout << i->first << "," << i->second << endl;
	}

	system("pause");

	}

	// Map of int as key and int as value

	{
	
	map<int, int> Mint;
	ifstream rdr("input1.txt");

	int Size;
	rdr >> Size;

	for (int i = 0; i < Size; i++)
	{
		int V;
		rdr >> V;

		Mint[V] = V;
	}

	for (map<int, int>::iterator i = Mint.begin(); i != Mint.end(); i++)
	{
		cout << i->first <<"," <<i->second <<endl;
	}

	system("pause");

	}	
}